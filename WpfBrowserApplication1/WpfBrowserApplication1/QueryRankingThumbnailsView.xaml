<?xml version="1.0" encoding="Utf-16"?>
<ResourceDictionary
    xmlns = "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x = "http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys = "clr-namespace:System;assembly=mscorlib"
    xmlns:emCore = "clr-namespace:emCore;assembly=emCore"
    xmlns:emVisuals = "clr-namespace:emVisuals;assembly=emVisuals"
    xmlns:emContextVisuals = "clr-namespace:emContextVisuals;assembly=emContextVisuals">
    <SolidColorBrush x:Key = "cSelection" Color = "#FF6600"/>
    <SolidColorBrush x:Key = "cSelectionBackground" Color = "#99AABB"/>
    <SolidColorBrush x:Key = "cSelectionBorderBrush" Color = "SlateGray"/>
    <emCore:EMLinearGradientFormatter x:Key = "EMLinearGradientFormatter"/>
    <emCore:EMClipGradientFormatter x:Key = "EMClipGradientFormatter"/>
    <emCore:RGBtoColorConverter x:Key = "RGBtoColorConverter"/>
    <emCore:IconConverter x:Key = "IconConverter"/>
    <emCore:ViewTypeConverter x:Key = "ViewTypeConverter"/>
    <emCore:EMNodeFormatter x:Key = "NodeFormatter"/>

    <ControlTemplate x:Key = "FlatButtonTemplate" TargetType = "Button">
        <Border SnapsToDevicePixels = "True">
            <ContentPresenter
                RecognizesAccessKey = "True"
                Content = "{TemplateBinding ContentControl.Content}"
                ContentTemplate = "{TemplateBinding ContentControl.ContentTemplate}"
                ContentStringFormat = "{TemplateBinding ContentControl.ContentStringFormat}"
                Margin = "{TemplateBinding Control.Padding}"
                HorizontalAlignment = "{TemplateBinding Control.HorizontalContentAlignment}"
                VerticalAlignment = "{TemplateBinding Control.VerticalContentAlignment}"
                SnapsToDevicePixels = "{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        </Border>
    </ControlTemplate>

    <Style x:Key = "FlatButton" TargetType = "Button">
        <Setter Property = "Template" Value="{StaticResource FlatButtonTemplate}"/>
    </Style>

    <DataTemplate x:Key = "RankRectangleTemplate">
        <Border
            SnapsToDevicePixels = "True"
            Cursor = "Hand"
            Height = "14"
            Width = "100"
            BorderThickness = "1"
            BorderBrush = "Silver"
            CornerRadius = "2"
            HorizontalAlignment = "Center"
            VerticalAlignment = "Center"
            Background = "{Binding Path=RankBrush, FallbackValue=Transparent, Converter={StaticResource RGBtoColorConverter}, ConverterParameter=70}"/>
    </DataTemplate>
    <DataTemplate x:Key = "RankItemRectangleTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width = "Auto"></ColumnDefinition>
                <ColumnDefinition Width = "Auto"></ColumnDefinition>
                <ColumnDefinition Width = "Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image
                x:Name = "image"
                Stretch = "Uniform"
                Width = "14"
                Height = "14"
                Source = "pack://application:,,,/emGraphics;component/images/16x16/check.png"
                Grid.Column = "0"
                VerticalAlignment = "Center"
                Margin = "3,3,0,3"/>
            <Border
                SnapsToDevicePixels = "True"
                Cursor = "Hand"
                Height = "10"
                Width = "100"
                CornerRadius = "2"
                BorderThickness = "1"
                BorderBrush = "Silver"
                HorizontalAlignment = "Center"
                VerticalAlignment = "Center"
                Background = "{Binding Path=RankBrush, Converter={StaticResource RGBtoColorConverter}, ConverterParameter=70}"
                Grid.Column = "1"
                Margin = "3,3,0,3"/>
            <TextBlock Text = "{Binding Path=RankValue}" Grid.Column = "2" VerticalAlignment = "Center" Margin = "3"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding = "{Binding IsSelected}" Value = "True">
                <Setter TargetName = "image" Property = "Visibility" Value = "Visible"/>
            </DataTrigger>
            <DataTrigger Binding = "{Binding IsSelected}" Value = "False">
                <Setter TargetName = "image" Property = "Visibility" Value = "Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key = "NameArea" TargetType = "emVisuals:EMTextBlock">
        <Setter Property = "TextTrimming" Value = "CharacterEllipsis"/>
        <Setter Property = "Foreground" Value = "White"/>
        <Setter Property = "Text">
            <Setter.Value>
                <!--emCore:EMBinding emData = "info/attributes/Metadata/object_info/headline"/-->
                <emCore:EMBinding emData = "info/attributes/ObjectMetadata/iptc/headline"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value = "True">
                <DataTrigger.Binding>
                    <emCore:EMTypeBinding ConverterParameter = "WireImage"/>
                </DataTrigger.Binding>
                <Setter Property = "Text">
                    <Setter.Value>
                        <!--emCore:EMBinding emData = "info/attributes/Metadata/object_info/headline"/-->
                        <emCore:EMBinding emData = "info/attributes/ObjectMetadata/iptc/headline"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Value = "True">
                <DataTrigger.Binding>
                    <emCore:EMTypeBinding ConverterParameter = "Image"/>
                </DataTrigger.Binding>
                <Setter Property = "Text">
                    <Setter.Value>
                        <!--emCore:EMBinding emData = "info/attributes/Metadata/object_info/object_name"/-->
                        <emCore:EMBinding emData = "info/attributes/ObjectMetadata/iptc/object_name"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value = "True">
                        <Condition.Binding>
                            <!--emCore:EMOPBinding emData = "info/attributes/Metadata/object_info/filename" emOP = "opExists"/-->
                            <emCore:EMOPBinding emData = "info/attributes/ObjectMetadata/iptc/filename" emOP = "opExists"/>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value = "True">
                        <Condition.Binding>
                            <emCore:EMTypeBinding ConverterParameter = "WireImage"/>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter Property = "Text">
                    <Setter.Value>
                        <!--emCore:EMBinding emData = "info/attributes/Metadata/object_info/filename"/-->
                        <emCore:EMBinding emData = "info/attributes/ObjectMetadata/iptc/filename"/>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key = "ImageTypeTemplate">
        <Grid VerticalAlignment = "Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width = "*"></ColumnDefinition>
                <ColumnDefinition Width = "Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!--      <emVisuals:EMTextBlock Foreground = "White" Grid.Column = "0" TextTrimming = "CharacterEllipsis"> -->
            <emVisuals:EMTextBlock Foreground = "White" Grid.Column = "0" TextTrimming = "CharacterEllipsis">
                <emVisuals:EMTextBlock.Text>
                    <emCore:EMBinding emData = "info/attributes/ObjectMetadata/iptc/caption"/>
                </emVisuals:EMTextBlock.Text>
            </emVisuals:EMTextBlock>
            <Button
                Grid.Column = "1"
                Cursor = "Hand"
                Style = "{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                Command = "{x:Static emVisuals:EMCommandProvider.ShowInfotipCommand}"
                CommandParameter = "/SysConfig/Common/Infotip/Infotip_IMAGE.html">
                <Image Stretch = "None" Source = "pack://application:,,,/emGraphics;component/images/16x16/metadata.png"/>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key = "VideoTypeTemplate">
        <Grid VerticalAlignment = "Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width = "*"></ColumnDefinition>
                <ColumnDefinition Width = "Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <emVisuals:EMTextBlock Foreground = "White" Grid.Column = "0" TextTrimming = "CharacterEllipsis">
                <emVisuals:EMTextBlock.Text>
                    <emCore:EMBinding emData = "info/name"/>
                </emVisuals:EMTextBlock.Text>
            </emVisuals:EMTextBlock>
            <Button
                Grid.Column = "1"
                Cursor = "Hand"
                Style = "{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                Command = "{x:Static emVisuals:EMCommandProvider.ShowInfotipCommand}"
                CommandParameter = "/SysConfig/Common/Infotip/Infotip_IMAGE.html">
                <Image Stretch = "None" Source = "pack://application:,,,/emGraphics;component/images/16x16/metadata.png"/>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key = "WireImageTypeTemplate">
        <StackPanel VerticalAlignment = "Center" Orientation = "Horizontal">
            <emVisuals:EMTextBlock Foreground = "White" TextTrimming = "CharacterEllipsis">
                <emVisuals:EMTextBlock.Text>
                    <emCore:EMBinding emData = "info/attributes/ObjectMetadata/iptc/source"/>
                </emVisuals:EMTextBlock.Text>
            </emVisuals:EMTextBlock>
            <emVisuals:EMTextBlock Foreground = "White" TextTrimming = "CharacterEllipsis">
                <emVisuals:EMTextBlock.Text>
                    <emCore:EMBinding emData = "info/attributes/ObjectMetadata/iptc/category"/>
                </emVisuals:EMTextBlock.Text>
            </emVisuals:EMTextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key = "AdContentTypeTemplate">
        <emVisuals:EMTextBlock Foreground = "White" TextTrimming = "CharacterEllipsis">
            <emVisuals:EMTextBlock.Text>
                <emCore:EMBinding emData = "info/attributes/adr/advertiserName"/>
            </emVisuals:EMTextBlock.Text>
        </emVisuals:EMTextBlock>
    </DataTemplate>

    <DataTemplate x:Key = "AdReserveTypeTemplate">
        <emVisuals:EMTextBlock Foreground = "White" TextTrimming = "CharacterEllipsis">
            <emVisuals:EMTextBlock.Text>
                <emCore:EMBinding emData = "info/attributes/adr/advertiserName"/>
            </emVisuals:EMTextBlock.Text>
        </emVisuals:EMTextBlock>
    </DataTemplate>

    <DataTemplate x:Key = "PrintProductTypeTemplate">
        <emVisuals:EMTextBlock Foreground = "White" TextTrimming = "CharacterEllipsis">
            <emVisuals:EMTextBlock.Text>
                <emCore:EMBinding emData = "info/system_attributes/props/productInfo/issueDate" emType = "emDate" emFormat = "{}{0:MMM-dd-yy}"/>
            </emVisuals:EMTextBlock.Text>
        </emVisuals:EMTextBlock>
    </DataTemplate>

    <DataTemplate x:Key = "PrintEditionTypeTemplate">
        <emVisuals:EMTextBlock Foreground = "White" TextTrimming = "CharacterEllipsis">
            <emVisuals:EMTextBlock.Text>
                <emCore:EMBinding emData = "info/system_attributes/props/productInfo/issueDate" emType = "emDate" emFormat = "{}{0:MMM-dd-yy}"/>
            </emVisuals:EMTextBlock.Text>
        </emVisuals:EMTextBlock>
    </DataTemplate>

    <DataTemplate x:Key = "PrintPageTypeTemplate">
        <emVisuals:EMTextBlock Foreground = "White" TextTrimming = "CharacterEllipsis">
            <emVisuals:EMTextBlock.Text>
                <emCore:EMBinding emData = "info/system_attributes/props/productInfo/issueDate" emType = "emDate" emFormat = "{}{0:MMM-dd-yy}"/>
            </emVisuals:EMTextBlock.Text>
        </emVisuals:EMTextBlock>
    </DataTemplate>

    <Style x:Key = "GridVideoStyle" TargetType = "Grid">
        <Setter Property = "Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Value = "True">
                <DataTrigger.Binding>
                    <emCore:EMTypeBinding ConverterParameter = "Video"/>
                </DataTrigger.Binding>
                <Setter Property = "Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key = "GridImageStyle" TargetType = "Grid">
        <Setter Property = "Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Value = "True">
                <DataTrigger.Binding>
                    <emCore:EMTypeBinding ConverterParameter = "Image"/>
                </DataTrigger.Binding>
                <Setter Property = "Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Value = "True">
                <DataTrigger.Binding>
                    <emCore:EMTypeBinding ConverterParameter = "WireImage"/>
                </DataTrigger.Binding>
                <Setter Property = "Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key = "ThumbnailTemplate">
        <Border
            Margin = "1"
            SnapsToDevicePixels = "True"
            Width = "180"
            Height = "180"
            x:Name = "itemBorder"
            Background = "#FF666666"
            BorderThickness = "1">
            <Border.BorderBrush>
                <SolidColorBrush x:Name = "transparentBrush" Color = "Black"/>
            </Border.BorderBrush>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height = "*"></RowDefinition>
                    <RowDefinition Height = "Auto"></RowDefinition>
                    <RowDefinition Height = "Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <!--ImageArea  -->
                <Border
                    Grid.Row = "0"
                    RenderTransformOrigin = "0.5, 0.5"
                    Margin = "0,1,0,1"
                    BorderThickness = "2"
                    CornerRadius = "10"
                    SnapsToDevicePixels = "True">
                    <Grid>
                        <Grid Background = "Transparent" Margin="3" Style = "{StaticResource GridImageStyle}">
                            <Image Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Image.Source>
                                    <emCore:EMBinding emData="Preview" emFormat="thumbnail"/>
                                </Image.Source>
                            </Image>
                        </Grid>
                        <Grid Background = "Transparent" Margin="3" Style = "{StaticResource GridVideoStyle}">
                            <emVisuals:EMMediaElement Format="thumbnail">
                                <emVisuals:EMMediaElement.Source>
                                    <emCore:EMBinding emData = "info/system_attributes/props/productInfo/path"/>
                                </emVisuals:EMMediaElement.Source>
                            </emVisuals:EMMediaElement>
                        </Grid>
                    </Grid>
                </Border>

                <!--NameArea  -->
                <Grid Grid.Row = "1" VerticalAlignment = "Center" Background = "#FF333333">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width = "Auto"></ColumnDefinition>
                        <ColumnDefinition Width = "Auto"></ColumnDefinition>
                        <ColumnDefinition Width = "*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column = "0" Margin = "3" Source = "pack://application:,,,/emGraphics;component/images/not-allowed.png" Stretch = "None">
                        <Image.Style>
                            <Style TargetType = "Image">
                                <Setter Property = "Visibility" Value = "Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMOPBinding emData = "info/locker" emOP = "opExists"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "Visibility" Value = "Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button
                        Grid.Column = "1"
                        Style = "{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Cursor = "Hand"
                        Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}"
                        CommandParameter = "ID_EM_WORKFLOW">
                        <Rectangle
                            Width = "16"
                            Height = "16"
                            Grid.Column = "1"
                            Margin = "3"
                            SnapsToDevicePixels = "True">
                            <Rectangle.Fill>
                                <emCore:EMBinding emData = "info/status_info/identifier"/>
                            </Rectangle.Fill>
                            <Rectangle.Style>
                                <Style TargetType = "Rectangle">
                                    <Setter Property = "Fill" Value = "Transparent"/>
                                    <Setter Property = "StrokeThickness" Value = "0"/>
                                    <Style.Triggers>
                                        <DataTrigger Value = "True">
                                            <DataTrigger.Binding>
                                                <emCore:EMOPBinding emData = "info/status_info/identifier" emOP = "opExists"/>
                                            </DataTrigger.Binding>
                                            <Setter Property = "StrokeThickness" Value = "1"/>
                                            <Setter Property = "Stroke" Value = "Black"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </Button>
                    <ContentControl Grid.Column = "2" Content = "{Binding}">
                        <ContentControl.Style>
                            <Style TargetType = "ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "Image"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource ImageTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "Video"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource VideoTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "WireImage"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource WireImageTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "AdContent"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource AdContentTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "AdReserve"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource AdReserveTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "EOM::PrintProduct"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource PrintProductTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "EOM::PrintEdition"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource PrintEditionTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "EOM::PrintPage"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource PrintPageTypeTemplate}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </Grid>

                <!--InfoArea  -->
                <Border Grid.Row = "2" Background = "#FF333333" SnapsToDevicePixels = "True">
                    <Grid>
                        <emVisuals:EMFieldControl
                            Margin = "3"
                            HorizontalAlignment = "Center"
                            VerticalAlignment = "Center"
                            SelectedValuePath = "RankValue"
                            ItemsSource = "{Binding Path=DataProvider.DBProvider.NodeRankCollection}"
                            ContentTemplate = "{StaticResource RankRectangleTemplate}"
                            ItemTemplate = "{StaticResource RankItemRectangleTemplate}">
                            <emVisuals:EMFieldControl.SelectedValue>
                                <emCore:EMBinding emData = "info/system_attributes/props/rank" emType = "emInteger"/>
                            </emVisuals:EMFieldControl.SelectedValue>
                        </emVisuals:EMFieldControl>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Value = "True" Binding = "{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type emVisuals:EMListBoxItem}}}">
                <Setter Property = "BorderBrush" TargetName = "itemBorder" Value = "{StaticResource cSelectionBorderBrush}"/>
                <Setter Property = "Background" TargetName = "itemBorder" Value = "{StaticResource cSelectionBackground}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key = "ThumbnailTemplate1">
        <Border
            Margin = "1"
            SnapsToDevicePixels = "True"
            Width = "180"
            Height = "180"
            x:Name = "itemBorder"
            Background = "#FF666666"
            BorderThickness = "1">
            <Border.BorderBrush>
                <SolidColorBrush x:Name = "transparentBrush" Color = "Black"/>
            </Border.BorderBrush>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height = "*"></RowDefinition>
                    <RowDefinition Height = "Auto"></RowDefinition>
                    <RowDefinition Height = "Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <!--ImageArea  -->
                <Border
                    Grid.Row = "0"
                    RenderTransformOrigin = "0.5, 0.5"
                    Margin = "0,1,0,1"
                    BorderThickness = "2"
                    CornerRadius = "10"
                    SnapsToDevicePixels = "True">
                    <Grid>
                        <Grid Background = "Transparent" Margin="3" Style = "{StaticResource GridImageStyle}">
                            <Image Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Image.Source>
                                    <emCore:EMBinding emData="Preview" emFormat="thumbnail"/>
                                </Image.Source>
                            </Image>
                        </Grid>
                        <Grid Background = "Transparent" Margin="3" Style = "{StaticResource GridVideoStyle}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height = "*"></RowDefinition>
                                <RowDefinition Height = "Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Background = "Transparent" Grid.Row = "0" BorderThickness = "0" BorderBrush = "Black">
                                <Grid>
                                    <Image x:Name="XImageElement" Cursor="Hand" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Image.Source>
                                            <emCore:EMBinding emData="Preview" emFormat="thumbnail"/>
                                        </Image.Source>
                                    </Image>
                                    <MediaElement x:Name = "XMediaElement" Stretch = "Fill"  LoadedBehavior="Close"/>
                                    <!--  -->
                                </Grid>
                            </Border>
                            <StackPanel Grid.Row = "1" HorizontalAlignment = "Center" Orientation = "Horizontal">
                                <Button Name = "PlayButton" Style="{StaticResource FlatButton}" ToolTip = "Play">
                                    <Image		                                
		                                Cursor = "Hand"
		                                Source = "pack://application:,,,/emGraphics;component/images/24x24/play.png"
		                                Width = "20"
		                                Height = "20"
		                                Margin = "10,0,10,0"/>
                                </Button>
                                <Button Name = "PauseButton" Style="{StaticResource FlatButton}" ToolTip = "Pause">
                                    <Image
		                                Cursor = "Hand"
		                                Source = "pack://application:,,,/emGraphics;component/images/24x24/pause.png"
		                                Width = "20"
		                                Height = "20"
		                                Margin = "10,0,10,0"/>
                                </Button>
                                <Button Name = "ResumeButton" Style="{StaticResource FlatButton}" ToolTip = "Resume">
                                    <Image
		                                Cursor = "Hand"
		                                Source = "pack://application:,,,/emGraphics;component/images/24x24/refresh.png"
		                                Width = "16"
		                                Height = "16"
		                                Margin = "10,0,10,0"/>
                                </Button>
                                <Button Name = "StopButton" Style="{StaticResource FlatButton}" ToolTip = "Stop">
                                    <Image
		                                Cursor = "Hand"
		                                Source = "pack://application:,,,/emGraphics;component/images/stop.png"
		                                Width = "16"
		                                Height = "16"
		                                Margin = "10,0,10,0"/>
                                </Button>
                            </StackPanel>
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent = "Button.Click" SourceName = "PlayButton">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard Name = "PlayVideo">
                                            <Storyboard SlipBehavior = "Slip">
                                                <DoubleAnimation Storyboard.TargetName = "XMediaElement" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0"/>
                                                <DoubleAnimation Storyboard.TargetName = "XImageElement" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0"/>
                                                <MediaTimeline Storyboard.TargetName = "XMediaElement" BeginTime = "0:0:0">
                                                    <MediaTimeline.Source>
                                                        <emCore:EMBinding emData = "info/system_attributes/props/productInfo/path"/>
                                                    </MediaTimeline.Source>
                                                </MediaTimeline>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent = "Button.Click" SourceName = "PauseButton">
                                    <EventTrigger.Actions>
                                        <PauseStoryboard BeginStoryboardName = "PlayVideo"/>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent = "Button.Click" SourceName = "ResumeButton">
                                    <EventTrigger.Actions>
                                        <ResumeStoryboard BeginStoryboardName = "PlayVideo"/>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent = "Button.Click" SourceName = "StopButton">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard Name = "StopVideo">
                                            <Storyboard SlipBehavior = "Slip">
                                                <MediaTimeline Storyboard.TargetName = "XMediaElement" BeginTime = "0:0:0" Source=""/>
                                                <DoubleAnimation Storyboard.TargetName = "XImageElement" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0"/>
                                                <DoubleAnimation Storyboard.TargetName = "XMediaElement" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Grid.Triggers>
                        </Grid>
                    </Grid>
                </Border>

                <!--NameArea  -->
                <Grid Grid.Row = "1" VerticalAlignment = "Center" Background = "#FF333333">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width = "Auto"></ColumnDefinition>
                        <ColumnDefinition Width = "Auto"></ColumnDefinition>
                        <ColumnDefinition Width = "*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column = "0" Margin = "3" Source = "pack://application:,,,/emGraphics;component/images/not-allowed.png" Stretch = "None">
                        <Image.Style>
                            <Style TargetType = "Image">
                                <Setter Property = "Visibility" Value = "Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMOPBinding emData = "info/locker" emOP = "opExists"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "Visibility" Value = "Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button
                        Grid.Column = "1"
                        Style = "{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Cursor = "Hand"
                        Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}"
                        CommandParameter = "ID_EM_WORKFLOW">
                        <Rectangle
                            Width = "16"
                            Height = "16"
                            Grid.Column = "1"
                            Margin = "3"
                            SnapsToDevicePixels = "True">
                            <Rectangle.Fill>
                                <emCore:EMBinding emData = "info/status_info/identifier"/>
                            </Rectangle.Fill>
                            <Rectangle.Style>
                                <Style TargetType = "Rectangle">
                                    <Setter Property = "Fill" Value = "Transparent"/>
                                    <Setter Property = "StrokeThickness" Value = "0"/>
                                    <Style.Triggers>
                                        <DataTrigger Value = "True">
                                            <DataTrigger.Binding>
                                                <emCore:EMOPBinding emData = "info/status_info/identifier" emOP = "opExists"/>
                                            </DataTrigger.Binding>
                                            <Setter Property = "StrokeThickness" Value = "1"/>
                                            <Setter Property = "Stroke" Value = "Black"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </Button>
                    <ContentControl Grid.Column = "2" Content = "{Binding}">
                        <ContentControl.Style>
                            <Style TargetType = "ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "Image"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource ImageTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "Video"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource VideoTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "WireImage"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource WireImageTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "AdContent"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource AdContentTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "AdReserve"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource AdReserveTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "EOM::PrintProduct"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource PrintProductTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "EOM::PrintEdition"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource PrintEditionTypeTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Value = "True">
                                        <DataTrigger.Binding>
                                            <emCore:EMTypeBinding ConverterParameter = "EOM::PrintPage"/>
                                        </DataTrigger.Binding>
                                        <Setter Property = "ContentTemplate" Value = "{StaticResource PrintPageTypeTemplate}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </Grid>

                <!--InfoArea  -->
                <Border Grid.Row = "2" Background = "#FF333333" SnapsToDevicePixels = "True">
                    <Grid>
                        <emVisuals:EMFieldControl
                            Margin = "3"
                            HorizontalAlignment = "Center"
                            VerticalAlignment = "Center"
                            SelectedValuePath = "RankValue"
                            ItemsSource = "{Binding Path=DataProvider.DBProvider.NodeRankCollection}"
                            ContentTemplate = "{StaticResource RankRectangleTemplate}"
                            ItemTemplate = "{StaticResource RankItemRectangleTemplate}">
                            <emVisuals:EMFieldControl.SelectedValue>
                                <emCore:EMBinding emData = "info/system_attributes/props/rank" emType = "emInteger"/>
                            </emVisuals:EMFieldControl.SelectedValue>
                        </emVisuals:EMFieldControl>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Value = "True" Binding = "{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type emVisuals:EMListBoxItem}}}">
                <Setter Property = "BorderBrush" TargetName = "itemBorder" Value = "{StaticResource cSelectionBorderBrush}"/>
                <Setter Property = "Background" TargetName = "itemBorder" Value = "{StaticResource cSelectionBackground}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key = "GroupContainerStyle" TargetType = "{x:Type GroupItem}">
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander HorizontalAlignment = "Stretch" HorizontalContentAlignment = "Stretch" IsExpanded = "False" Margin="16,0,0,0">
                        <Expander.Header>
                            <Grid Height = "20" Background = "#FF555555" Width = "{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type emVisuals:EMCompositeView}}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width = "*"></ColumnDefinition>
                                    <ColumnDefinition Width = "*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column = "0" Orientation = "Horizontal" Margin = "10,0,10,0">
                                    <TextBlock Foreground = "White" Text = "{Binding Path=Name}" Margin = "0,0,50,0"/>
                                </StackPanel>
                                <StackPanel Grid.Column = "1" Orientation = "Horizontal" Margin = "10,0,10,0">
                                    <TextBlock Foreground = "White" Text = "count:"/>
                                    <TextBlock Foreground = "White" FontWeight = "Bold" Margin = "10,0,0,0" Text = "{Binding Path=ItemCount}"/>
                                </StackPanel>
                            </Grid>
                        </Expander.Header>
                        <ItemsPresenter/>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key = "QueryRankingThumbnailsView" TargetType = "{x:Type emVisuals:EMCompositeView}">
        <Setter Property = "ViewType" Value = "Idea Theme"/>
        <Setter Property = "ImageViewType" Value = "Thumbnails"/>
        <Setter Property = "UpdateEventTimeDelay" Value = "0:0:0"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "emVisuals:EMCompositeView">
                    <Grid Background = "#FF333333">
                        <Grid.RowDefinitions>
                            <RowDefinition Height = "Auto"></RowDefinition>
                            <RowDefinition Height = "*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row = "0" Style = "{DynamicResource EMToolbarQueryEx}"/>
                        <emVisuals:EMWrapView
                            Grid.Row = "1"
                            ItemTemplate = "{StaticResource ThumbnailTemplate}"
                            FluidMove = "True"
                            SelectedIndex = "0"
                            DoubleClickAction = "FullScreen">
                            <emVisuals:EMWrapView.GroupStyle>
                                <GroupStyle ContainerStyle = "{StaticResource GroupContainerStyle}">
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <emVisuals:EMVWrapPanel/>
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                </GroupStyle>
                            </emVisuals:EMWrapView.GroupStyle>
                            <emVisuals:EMWrapView.InputBindings>
                                <KeyBinding Key = "F11" Command = "{x:Static emVisuals:EMCommandProvider.FullScreenCommand}"/>
                                <KeyBinding Gesture = "CTRL+0" Command = "{x:Static emVisuals:EMCommandProvider.UpdateValueCommand}">
                                    <KeyBinding.CommandParameter>
                                        <x:Array Type = "sys:Object">
                                            <sys:String>info/system_attributes/props/rank</sys:String>
                                            <sys:Object>0</sys:Object>
                                        </x:Array>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Gesture = "CTRL+1" Command = "{x:Static emVisuals:EMCommandProvider.UpdateValueCommand}">
                                    <KeyBinding.CommandParameter>
                                        <x:Array Type = "sys:Object">
                                            <sys:String>info/system_attributes/props/rank</sys:String>
                                            <sys:Object>1</sys:Object>
                                        </x:Array>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Gesture = "CTRL+2" Command = "{x:Static emVisuals:EMCommandProvider.UpdateValueCommand}">
                                    <KeyBinding.CommandParameter>
                                        <x:Array Type = "sys:Object">
                                            <sys:String>info/system_attributes/props/rank</sys:String>
                                            <sys:Object>2</sys:Object>
                                        </x:Array>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Gesture = "CTRL+3" Command = "{x:Static emVisuals:EMCommandProvider.UpdateValueCommand}">
                                    <KeyBinding.CommandParameter>
                                        <x:Array Type = "sys:Object">
                                            <sys:String>info/system_attributes/props/rank</sys:String>
                                            <sys:Object>3</sys:Object>
                                        </x:Array>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Gesture = "CTRL+4" Command = "{x:Static emVisuals:EMCommandProvider.UpdateValueCommand}">
                                    <KeyBinding.CommandParameter>
                                        <x:Array Type = "sys:Object">
                                            <sys:String>info/system_attributes/props/rank</sys:String>
                                            <sys:Object>4</sys:Object>
                                        </x:Array>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Gesture = "CTRL+5" Command = "{x:Static emVisuals:EMCommandProvider.UpdateValueCommand}">
                                    <KeyBinding.CommandParameter>
                                        <x:Array Type = "sys:Object">
                                            <sys:String>info/system_attributes/props/rank</sys:String>
                                            <sys:Object>5</sys:Object>
                                        </x:Array>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Modifiers = "Control" Key = "P" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_EM_PRINT"/>
                                <KeyBinding Modifiers = "Control" Key = "E" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_EM_EDIT"/>
                                <KeyBinding Modifiers = "Control" Key = "I" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_EM_PROPERTIES"/>
                                <KeyBinding Modifiers = "Control" Key = "M" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_EM_METADATA"/>
                                <KeyBinding Modifiers = "Control" Key = "W" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_EM_WORKFLOW"/>
                                <KeyBinding Key = "Space" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_DETACH_DOCINSPECTOR"/>
                                <KeyBinding Key = "F1" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_VIEW_DOCINSPECTOR"/>
                                <KeyBinding Key = "Enter" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_EM_PREVIEW"/>
                                <KeyBinding Key = "Back" Command = "{x:Static emVisuals:EMCommandProvider.ToolbarCommand}" CommandParameter = "ID_FOLDER_UP"/>
                            </emVisuals:EMWrapView.InputBindings>
                        </emVisuals:EMWrapView>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
